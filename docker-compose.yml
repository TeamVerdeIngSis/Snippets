version: '3.8'

services:

  snippets_api:
    container_name: "snippets-api"
    build:
      context: .
      dockerfile: Dockerfilez
    platform: linux/amd64
    environment:
      POSTGRES_HOST: snippets_db
      POSTGRES_DB: snippets_db
      POSTGRES_USER: snippets_user
      POSTGRES_PASSWORD: snippets_password
      POSTGRES_PORT: 5432

      NEW_RELIC_LICENSE_KEY: ${NEW_RELIC_LICENSE_KEY}
      NEW_RELIC_APP_NAME: 'snippet-searcher'
      NEW_RELIC_AGENT_ENABLED: true
      NEW_RELIC_LOG_EXTENSION_ADD_MDC: true

      AUTH0_AUDIENCE: ${AUTH0_AUDIENCE}
      AUTH_SERVER_URI: ${SPRING_SECURITY_OAUTH2_RESOURCESERVER_JWT_ISSUER_URI}
      AUTH_CLIENT_ID: ${AUTH0_CLIENT_ID}
      AUTH_CLIENT_SECRET: ${AUTH0_CLIENT_SECRET}
      spring.security.oauth2.resourceserver.jwt.issuer-uri: ${SPRING_SECURITY_OAUTH2_RESOURCESERVER_JWT_ISSUER_URI}

      SPRING_DATA_REDIS_HOST: redis
      SPRING_DATA_REDIS_PORT: 6379
    depends_on:
      - snippets_db

  snippets_db:
    container_name: "snippet_db"
    image: postgres:15
    platform: linux/amd64
    environment:
      POSTGRES_DB: snippets_db
      POSTGRES_USER: snippets_user
      POSTGRES_PASSWORD: snippets_password
    volumes:
      - db_data:/var/lib/postgresql/data

  asset_service:
    container_name: "asset-service"
    image: ghcr.io/austral-ingsis/snippet-asset-service:latest
    platform: linux/amd64
    environment:
      AZURE_HOST: "http://azurite"
      NEW_RELIC_LICENSE_KEY: ${NEW_RELIC_LICENSE_KEY}
      NEW_RELIC_APP_NAME: "api"
      NEW_RELIC_AGENT_ENABLED: false

  azuriteSnippets:
    container_name: "azurite-snippets"
    image: mcr.microsoft.com/azure-storage/azurite
    hostname: azurite
    restart: always
    ports:
      - "10000:10000"
      - "10001:10001"
      - "10002:10002"
    volumes:
      - blob:/workspace


  redis:
    image: redis:6-alpine
    container_name: redis
    platform: linux/amd64
    ports:
      - "6379:6379"
volumes:
  db_data:
    external: false
  blob:
    external: false
